classdef DoSolveTest < matlab.unittest.TestCase
  
  properties
    passedInSolutionResultsFilename
    passedInPreyDiffusionCoeff
    passedInSecondPredatorDiffusionCoeff
    passedInResourceDeviation
    passedInN
    passedInTSpan    
    passedInGetInitialData
    passedInGetFilename
    passedInGetFileDirname
    passedInExists    
    passedInLoad
    passedInMakeDir
    passedInSave
    passedInGetParams
    passedInSolver
  end
  
  methods
    function fakeFcnToPassIn(testCase,solutionResultsFilename,...
        preyDiffusionCoeff,secondPredatorDiffusionCoeff,...
        resourceDeviation,N,tspan,getInitialData,getFilename,...
        getFileDirname,exists,load,makeDir,save,getParams,solver)
      testCase.passedInSolutionResultsFilename = ...
        solutionResultsFilename;
      testCase.passedInPreyDiffusionCoeff = preyDiffusionCoeff;
      testCase.passedInSecondPredatorDiffusionCoeff = ...
        secondPredatorDiffusionCoeff;
      testCase.passedInResourceDeviation = resourceDeviation;
      testCase.passedInN = N;
      testCase.passedInTSpan = tspan;
      testCase.passedInGetInitialData = getInitialData;
      testCase.passedInGetFilename = getFilename;
      testCase.passedInGetFileDirname = getFileDirname;
      testCase.passedInExists = exists;      
      testCase.passedInLoad = load;
      testCase.passedInMakeDir = makeDir;
      testCase.passedInSave = save;
      testCase.passedInGetParams = getParams;
      testCase.passedInSolver = solver;
    end
  end
  
  methods (Test)
    function testPassesProperParamsToPassedInFunction(testCase)
      solutionResultsFilename = 'solution_results_filename';
      preyDiffusionCoeff = 0.2;
      secondPredatorDiffusionCoeff = 0.24;
      resourceDeviation = 0.2;
      N = 24;
      tspan = 0:0.002:50;
      getInitialData = @() {};
      solver = @() {};
      doSolve(@testCase.fakeFcnToPassIn,solutionResultsFilename,...
        preyDiffusionCoeff,secondPredatorDiffusionCoeff,...
        resourceDeviation,N,tspan,getInitialData,solver);
      testCase.verifyEqual(testCase.passedInSolutionResultsFilename,...
        solutionResultsFilename,...
        'Передано неправильное имя файла результатов решения');
      testCase.verifyEqual(testCase.passedInPreyDiffusionCoeff,...
        preyDiffusionCoeff,...
        'Передано неправильное значение коэффициента диффузии популяции жертв');
      testCase.verifyEqual(...
        testCase.passedInSecondPredatorDiffusionCoeff,...
        secondPredatorDiffusionCoeff,...
        'Передано неправильное значение коэффициента диффузии второй популяции хищников');
      testCase.verifyEqual(...
        testCase.passedInResourceDeviation,...
        resourceDeviation,...
        'Передано неправильное отклонение функции ресурса');
      testCase.verifyEqual(testCase.passedInN,N,...
        'Передано неправильное число точек сетки');
      testCase.verifyEqual(testCase.passedInTSpan,tspan,...
        'Передан неправильный интервал интегрирования по времени');
      testCase.verifyEqual(...
        testCase.passedInGetInitialData,...
        getInitialData,...
        'Передана неправильная функция получения начальных данных для решения до установления');
      testCase.verifyEqual(testCase.passedInGetFilename,@mfilename,...
        'Передана неправильная функция получения имени файла');
      testCase.verifyEqual(testCase.passedInGetFileDirname,...
        @getFileDirname,...
        'Передана неправильная функция получения имени папки, содержащей файл');
      testCase.verifyEqual(testCase.passedInExists,@exist,...
        'Передана неправильная функция проверки существования файла/переменной');      
      testCase.verifyEqual(testCase.passedInLoad,@load,...
        'Передана неправильная функция загрузки переменных из файла');
      testCase.verifyEqual(testCase.passedInMakeDir,@mkdir,...
        'Передана неправильная функция создания папки');
      testCase.verifyEqual(testCase.passedInSave,@saveStruct,...
        'Передана неправильная функция сохранения переменных в файл');
      testCase.verifyEqual(testCase.passedInGetParams,...
        @predatorPrey2x1Params,'Переданы неправильные параметры');
      testCase.verifyEqual(testCase.passedInSolver,solver,...
        'Передан неправильный решатель');
    end
  end
  
end

